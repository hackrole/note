移动app开发心得
===============

:date: 2014-05-26
:tags: app, 敏捷, restful
:authors: hackrole
:summary: 个人关于移动app开发的感悟和心得，主要是后端方向. 


移动开发当下可谓比较热门的行业，主要仍然已安卓和IOS应用开发为主。现在主要由实用app开发和移动游戏开发两大块.
本人从事移动开发时间并不太久，主要是负责后台开发。之前一直是做web开发。说是心得什么的未免泰国糊弄人。
不过是自己对自己短暂的移动开发过程中的经验和感想记下而已。

一定要敏捷
----------

这是对移动开发的一个感想吧。但是说起敏捷未免有太宽泛。大致会需要以下方面。

单元测试
~~~~~~~~

移动开发和web开发有很大的不同是，后端不再是决定性的。

传统的web开发，基本就是前端写好静态页面提交给后端，后端把页面改成模板，把数据嵌套到模板中，一个web就完成了。

而移动开发则恰恰想法，后端要先把数据接口准备好，然后以文档的形式发给前端工程师，前端在根据接口文档完成app开发。

这就导致一个问题。在web开发中后端对整个web有完全的把握能力，即便有时也会用到一些ajax.
而在移动开发过程中不论是前端还是后端都没有对这个项目完全的把控能力。对后端来说这个app几乎是透明的。
说好的东西不能检测自己写的好不好，直到前端跟他说报异常了才只能联调跟错误。甚至了对整个app的逻辑理解上出现分歧，基本就是要大改了。

所以后端开发最好有单元测试，最简单的单元测试也能保证接口不会出现的低级错误，避免频繁联调这种耗时耗力的活。
如果能一开始就看懂app的全貌，编写足够好而全的单元测试，对整个产品的进度也是很大的提高。

而一直都有个说法就是单元测试代码编写太耗时间，但这边在app后端开发绝对是不成立的。

1) 单元测试代码一般都很简单，不会消耗实际性上的时间。而因为没有单元测试的质量保证，一旦联调等时间发而更多，并且很痛苦。
2) 有了单元测试，至少自己也能安心点，算是给自己的定心丸。
3) 在遇到post接口等不易调试的接口时，通过单元测试却能很好的起到开发和调试的功效。

交流
~~~~

敏捷比较看重交流，这在app开发中也很重要，因为没人能全局上把控。所有需要给web开发更多的交流和沟通。

文档sphinx与nignx3
------------------


见过最多个文档居然是doc，每次接口写完了就写个doc email给前端。如果出问题，接口错了还要改下doc，在email一次。

后来碰到个稍微高级点的有rst,rst写起来确实给doc更好用。等到接口都写完的时候还能生产个html文件放到nginx上用。

可以啊，你因该要知道有个sphinx的啊。

用sphinx生成静态的项目站点，在配上nignx,这样出问题，这边直接改，改完一个make html,前端刷下页面就可以。那还用email/doc.
而且sphinx支持很多强大的功能。在app开发不二选的doc工具.

接口restuful
------------


